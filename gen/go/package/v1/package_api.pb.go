// Code generated by protoc-gen-go. DO NOT EDIT.
// source: package/v1/package_api.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Get packages
type PackageRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PackageRequest) Reset()         { *m = PackageRequest{} }
func (m *PackageRequest) String() string { return proto.CompactTextString(m) }
func (*PackageRequest) ProtoMessage()    {}
func (*PackageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb03aba76ae3f5f4, []int{0}
}

func (m *PackageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageRequest.Unmarshal(m, b)
}
func (m *PackageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageRequest.Marshal(b, m, deterministic)
}
func (m *PackageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageRequest.Merge(m, src)
}
func (m *PackageRequest) XXX_Size() int {
	return xxx_messageInfo_PackageRequest.Size(m)
}
func (m *PackageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PackageRequest proto.InternalMessageInfo

func (m *PackageRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Return package
type PackageResult struct {
	Domain  string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Profile *Profile `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`
	// list of packages
	Packages             []*Package `protobuf:"bytes,3,rep,name=packages,proto3" json:"packages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PackageResult) Reset()         { *m = PackageResult{} }
func (m *PackageResult) String() string { return proto.CompactTextString(m) }
func (*PackageResult) ProtoMessage()    {}
func (*PackageResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb03aba76ae3f5f4, []int{1}
}

func (m *PackageResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PackageResult.Unmarshal(m, b)
}
func (m *PackageResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PackageResult.Marshal(b, m, deterministic)
}
func (m *PackageResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PackageResult.Merge(m, src)
}
func (m *PackageResult) XXX_Size() int {
	return xxx_messageInfo_PackageResult.Size(m)
}
func (m *PackageResult) XXX_DiscardUnknown() {
	xxx_messageInfo_PackageResult.DiscardUnknown(m)
}

var xxx_messageInfo_PackageResult proto.InternalMessageInfo

func (m *PackageResult) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *PackageResult) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *PackageResult) GetPackages() []*Package {
	if m != nil {
		return m.Packages
	}
	return nil
}

type Profile struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb03aba76ae3f5f4, []int{2}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Package struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Package) Reset()         { *m = Package{} }
func (m *Package) String() string { return proto.CompactTextString(m) }
func (*Package) ProtoMessage()    {}
func (*Package) Descriptor() ([]byte, []int) {
	return fileDescriptor_fb03aba76ae3f5f4, []int{3}
}

func (m *Package) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Package.Unmarshal(m, b)
}
func (m *Package) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Package.Marshal(b, m, deterministic)
}
func (m *Package) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Package.Merge(m, src)
}
func (m *Package) XXX_Size() int {
	return xxx_messageInfo_Package.Size(m)
}
func (m *Package) XXX_DiscardUnknown() {
	xxx_messageInfo_Package.DiscardUnknown(m)
}

var xxx_messageInfo_Package proto.InternalMessageInfo

func (m *Package) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*PackageRequest)(nil), "package.v1.PackageRequest")
	proto.RegisterType((*PackageResult)(nil), "package.v1.PackageResult")
	proto.RegisterType((*Profile)(nil), "package.v1.Profile")
	proto.RegisterType((*Package)(nil), "package.v1.Package")
}

func init() { proto.RegisterFile("package/v1/package_api.proto", fileDescriptor_fb03aba76ae3f5f4) }

var fileDescriptor_fb03aba76ae3f5f4 = []byte{
	// 247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x29, 0x48, 0x4c, 0xce,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2f, 0x33, 0xd4, 0x87, 0x32, 0xe3, 0x13, 0x0b, 0x32, 0xf5, 0x0a, 0x8a,
	0xf2, 0x4b, 0xf2, 0x85, 0xb8, 0xa0, 0x42, 0x7a, 0x65, 0x86, 0x4a, 0x2a, 0x5c, 0x7c, 0x01, 0x10,
	0x5e, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa,
	0x04, 0xa3, 0x02, 0xa3, 0x06, 0x67, 0x10, 0x98, 0xad, 0xd4, 0xce, 0xc8, 0xc5, 0x0b, 0x57, 0x56,
	0x5c, 0x9a, 0x53, 0x22, 0x24, 0xc6, 0xc5, 0x96, 0x92, 0x9f, 0x9b, 0x98, 0x99, 0x07, 0x55, 0x07,
	0xe5, 0x09, 0xe9, 0x72, 0xb1, 0x17, 0x14, 0xe5, 0xa7, 0x65, 0xe6, 0xa4, 0x4a, 0x30, 0x29, 0x30,
	0x6a, 0x70, 0x1b, 0x09, 0xeb, 0x21, 0x6c, 0xd3, 0x0b, 0x80, 0x48, 0x05, 0xc1, 0xd4, 0x08, 0xe9,
	0x73, 0x71, 0x40, 0xa5, 0x8b, 0x25, 0x98, 0x15, 0x98, 0x31, 0xd4, 0x43, 0xed, 0x84, 0x2b, 0x52,
	0x32, 0xe6, 0x62, 0x87, 0x1a, 0x82, 0xcd, 0xa1, 0x42, 0x22, 0x5c, 0xac, 0xa9, 0xb9, 0x89, 0x99,
	0x39, 0x60, 0xcb, 0x39, 0x83, 0x20, 0x1c, 0x25, 0x49, 0x2e, 0x76, 0xa8, 0x49, 0x42, 0x7c, 0x5c,
	0x4c, 0x99, 0x29, 0x50, 0x2d, 0x4c, 0x99, 0x29, 0x46, 0x81, 0x5c, 0x5c, 0x50, 0x29, 0xc7, 0x00,
	0x4f, 0x21, 0x67, 0x2e, 0x2e, 0xf7, 0xd4, 0x12, 0x98, 0x5a, 0x29, 0x6c, 0x4e, 0x81, 0x84, 0x92,
	0x94, 0x24, 0x56, 0x39, 0x50, 0xd0, 0x38, 0x49, 0x46, 0x71, 0x21, 0x82, 0xff, 0x14, 0x13, 0xcc,
	0xfc, 0x98, 0x30, 0xc3, 0x24, 0x36, 0x70, 0x04, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x23,
	0xf2, 0x46, 0xff, 0xa0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PackageAPIClient is the client API for PackageAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PackageAPIClient interface {
	GetPackage(ctx context.Context, in *PackageRequest, opts ...grpc.CallOption) (*PackageResult, error)
}

type packageAPIClient struct {
	cc *grpc.ClientConn
}

func NewPackageAPIClient(cc *grpc.ClientConn) PackageAPIClient {
	return &packageAPIClient{cc}
}

func (c *packageAPIClient) GetPackage(ctx context.Context, in *PackageRequest, opts ...grpc.CallOption) (*PackageResult, error) {
	out := new(PackageResult)
	err := c.cc.Invoke(ctx, "/package.v1.PackageAPI/GetPackage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PackageAPIServer is the server API for PackageAPI service.
type PackageAPIServer interface {
	GetPackage(context.Context, *PackageRequest) (*PackageResult, error)
}

// UnimplementedPackageAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPackageAPIServer struct {
}

func (*UnimplementedPackageAPIServer) GetPackage(ctx context.Context, req *PackageRequest) (*PackageResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPackage not implemented")
}

func RegisterPackageAPIServer(s *grpc.Server, srv PackageAPIServer) {
	s.RegisterService(&_PackageAPI_serviceDesc, srv)
}

func _PackageAPI_GetPackage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PackageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PackageAPIServer).GetPackage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/package.v1.PackageAPI/GetPackage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PackageAPIServer).GetPackage(ctx, req.(*PackageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PackageAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "package.v1.PackageAPI",
	HandlerType: (*PackageAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPackage",
			Handler:    _PackageAPI_GetPackage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "package/v1/package_api.proto",
}
